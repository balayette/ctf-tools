From 18be774e6b9fc9db9f5abb6479c8834cdcc5aa0d Mon Sep 17 00:00:00 2001
From: Nicolas Manichon <nmanichon@gmail.com>
Date: Sun, 24 Jan 2021 15:35:47 +0100
Subject: [PATCH] Instruction counting

---
 accel/tcg/cpu-exec.c  | 4 ++++
 include/hw/core/cpu.h | 2 ++
 include/qemu/log.h    | 2 ++
 linux-user/syscall.c  | 7 +++++++
 softmmu/cpus.c        | 1 +
 util/log.c            | 2 ++
 6 files changed, 18 insertions(+)

diff --git a/accel/tcg/cpu-exec.c b/accel/tcg/cpu-exec.c
index e0df9b6a1d..d1bc85d5e9 100644
--- a/accel/tcg/cpu-exec.c
+++ b/accel/tcg/cpu-exec.c
@@ -169,6 +169,10 @@ cpu_tb_exec(CPUState *cpu, TranslationBlock *itb, int *tb_exit)
                            itb->cs_base, itb->pc, itb->flags,
                            lookup_symbol(itb->pc));
 
+    if (likely(qemu_loglevel_mask(CPU_LOG_INSTR_CNT) &&
+               qemu_log_in_addr_range(itb->pc)))
+      cpu->icount += itb->icount;
+
 #if defined(DEBUG_DISAS)
     if (qemu_loglevel_mask(CPU_LOG_TB_CPU)
         && qemu_log_in_addr_range(itb->pc)) {
diff --git a/include/hw/core/cpu.h b/include/hw/core/cpu.h
index 140fa32a5e..686ea3103a 100644
--- a/include/hw/core/cpu.h
+++ b/include/hw/core/cpu.h
@@ -369,6 +369,8 @@ struct CPUState {
     int nr_cores;
     int nr_threads;
 
+    uint64_t icount;
+
     struct QemuThread *thread;
 #ifdef _WIN32
     HANDLE hThread;
diff --git a/include/qemu/log.h b/include/qemu/log.h
index 9b80660207..1d37cd2705 100644
--- a/include/qemu/log.h
+++ b/include/qemu/log.h
@@ -44,6 +44,8 @@ static inline bool qemu_log_separate(void)
     return res;
 }
 
+#define CPU_LOG_INSTR_CNT (1 << 30)
+
 #define CPU_LOG_TB_OUT_ASM (1 << 0)
 #define CPU_LOG_TB_IN_ASM  (1 << 1)
 #define CPU_LOG_TB_OP      (1 << 2)
diff --git a/linux-user/syscall.c b/linux-user/syscall.c
index 34760779c8..6bf3be5646 100644
--- a/linux-user/syscall.c
+++ b/linux-user/syscall.c
@@ -8253,6 +8253,9 @@ static abi_long do_syscall1(void *cpu_env, int num, abi_long arg1,
         if (CPU_NEXT(first_cpu)) {
             TaskState *ts = cpu->opaque;
 
+            qemu_log_mask(CPU_LOG_INSTR_CNT, "thread exit icount %ld\n",
+                          cpu->icount);
+
             object_property_set_bool(OBJECT(cpu), "realized", false, NULL);
             object_unref(OBJECT(cpu));
             /*
@@ -8275,6 +8278,8 @@ static abi_long do_syscall1(void *cpu_env, int num, abi_long arg1,
         }
 
         pthread_mutex_unlock(&clone_lock);
+        qemu_log_mask(CPU_LOG_INSTR_CNT, "application exit icount %ld\n",
+                      cpu->icount);
         preexit_cleanup(cpu_env, arg1);
         _exit(arg1);
         return 0; /* avoid warning */
@@ -10238,6 +10243,8 @@ static abi_long do_syscall1(void *cpu_env, int num, abi_long arg1,
         /* new thread calls */
     case TARGET_NR_exit_group:
         preexit_cleanup(cpu_env, arg1);
+        qemu_log_mask(CPU_LOG_INSTR_CNT, "application exit icount %ld\n",
+                      cpu->icount);
         return get_errno(exit_group(arg1));
 #endif
     case TARGET_NR_setdomainname:
diff --git a/softmmu/cpus.c b/softmmu/cpus.c
index 1dc20b9dc3..20e8ff9909 100644
--- a/softmmu/cpus.c
+++ b/softmmu/cpus.c
@@ -538,6 +538,7 @@ void pause_all_vcpus(void)
 
     qemu_clock_enable(QEMU_CLOCK_VIRTUAL, false);
     CPU_FOREACH(cpu) {
+        qemu_log_mask(CPU_LOG_INSTR_CNT, "cpu exit icount %ld\n", cpu->icount);
         if (qemu_cpu_is_self(cpu)) {
             qemu_cpu_stop(cpu, true);
         } else {
diff --git a/util/log.c b/util/log.c
index 2ee1500bee..caf8a72e3e 100644
--- a/util/log.c
+++ b/util/log.c
@@ -334,6 +334,8 @@ const QEMULogItem qemu_log_items[] = {
 #endif
     { LOG_STRACE, "strace",
       "log every user-mode syscall, its input, and its result" },
+    { CPU_LOG_INSTR_CNT | CPU_LOG_TB_NOCHAIN, "instrc",
+      "log count of executed instructions" },
     { 0, NULL, NULL },
 };
 
-- 
2.30.0

